#ifndef _TS_CFG_H
#define _TS_CFG_H

//-------------------------------------------------------------------------------------------------------------------
#define TS_I2C_DEBUG 									0 		//1:打开在线调试功能 需要打开硬件i2c功能 ;	0:关闭在线调试功能 
//注意：只有触摸键应用才支持在线调试，滑条应用不支持在线调试。
/********************************************************************************************************
说明：
触摸在线调试功能可在PC端显示当前触摸值、基准值、门限值，可在PC端设置触摸灵敏度，并导出配置文件，
此功能需配合仿真下载器及上位机工具CACHIPTOOL.exe才能使用。详细使用方法请参考相关文档说明。
********************************************************************************************************/

//-------------------------------------------------------------------------------------------------------------------
#define SUPPORT_KEY								1		//1:支持触摸按键;	0:不支持触摸按键
#define SUPPORT_WHEEL_SLIDER					0		//1:支持触摸触摸滑条或圆环；0:不支持触摸滑条或圆环
//-------------------------------------------------------------------------------------------------------------------


/***********触摸省电模式设置********************************************************************************************************/
#define SUPPORT_TOUCH_SLEEP_MODE				0		//1：支持  0：不支持  

#if SUPPORT_TOUCH_SLEEP_MODE
	#define ENTER_STOP_MODE_TIME				5		//进入触摸省电模式倒数时间，单位为0.5S，如定义为5，5*0.5=2.5秒，即2.5秒无触摸即进入省电模式。
	#define SLEEP_MODE_SCAN_INTERVAL_TIME		100		//扫描触摸的间隔时间，单位约为1ms，注意：此时间越长，芯片待机功耗越低，但触摸响应速度越慢。
	#define SLEEP_TOUTH_THD						30		//触摸省电模式下门限值设置，当触摸数据变化量大于此数值将退出省电模式。
	
	#define SLEEP_MODE_DEBUG					0		//省电模式调试开关，使能后可通过UART打印触摸数据。

//注意：使能触摸省电模式后，如在某些条件不需要进入省电模式，只需要把TS_SleepEn设为0，如需要进省电模式，把TS_SleepEn设为1。
#endif
//-------------------------------------------------------------------------------------------------------------------


/********************正常工作模式下触摸寄存器参数配置****************************************************/
#define TS_RESO					5			//TK电容扫描分辨率设置，范围：0~7 ，计数器位数：(TS_RESO+9)位。
#define TS_DS					0			//采样时钟设置，范围：0或3，0:24MHz,3:4MHz，其他值：无效
#define TS_DIV					32			//充放电频率设置，范围：0~63，0~61：充放电频率（MHZ)= 24/(x+4)；62:充放电频率1~3MHZ，正态分布，63:充放电频率1~3MHZ，均匀分布。
#define TS_RB 					5			//放电电阻设置，范围：0~7，0:10K,1:20K,2:30K,3:40K,4:60K,5:80K,6:150K,7:300K。
#define TS_VRSEL 				3			//参考电压设置：0~7，0:1.81V,1:2.14V,2:2.49V,3:2.83V,4:3.18V,5:3.51V,6:3.86V,7:4.10V;注意：VCC-VTH>0.5V
#define TRACE_LINE_TAG		((unsigned int)(0x0001<<(TS_RESO + 8)))//自适应目标线，当前设置为最大计数的50%，不建议修改。
//-------------------------------------------------------------------------------------------------------------------


/********************省电模式下触摸寄存器参数配置****************************************************/
#if SUPPORT_TOUCH_SLEEP_MODE
	#define TS_SLP_RESO			4			//TK电容扫描分辨率设置，范围：0~7 ，计数器位数：(TS_SLP_RESO+9)位。
	#define TS_SLP_DS			0			//采样时钟设置，范围：0或3，0:24MHz,3:4MHz，其他值：无效
	#define TS_SLP_DIV			61			//充放电频率设置，范围：0~63，0~61：充放电频率（MHZ)= 24/(x+4)；62:充放电频率1~3MHZ，正态分布，63:充放电频率1~3MHZ，均匀分布。
	#define TS_SLP_RB 			5			//放电电阻设置，范围：0~7，0:10K,1:20K,2:30K,3:40K,4:60K,5:80K,6:150K,7:300K。
	#define TS_SLP_VRSEL 		3			//参考电压设置：0~7，0:1.81V,1:2.14V,2:2.49V,3:2.83V,4:3.18V,5:3.51V,6:3.86V,7:4.10V;注意：VCC-VTH>0.5V
	#define SLP_TRACE_LINE_TAG	((unsigned int)(0x0001<<(TS_SLP_RESO + 8)))//自适应目标线，当前设置为最大计数的50%，不建议修改。
#endif
//-------------------------------------------------------------------------------------------------------------------

	
/********************触摸数据滤波设置*********************************************************/
#define FILTER_COUNT								5		
//说明：此数值越大，数据越平滑，但是按键响应速度越慢
//-------------------------------------------------------------------------------------------------------------------

	
//-----------------触摸键应用设置-------------------------------------------------------------------------------------
#if SUPPORT_KEY
#define GENERATE_TS_KEY_EN							0		//根据KeysFlagSN状态产生触摸键消息TS_Key使能，如果不需要产生TS_Key，用户可直接根据KeysFlagSN来判断按键状态。
#if GENERATE_TS_KEY_EN
	#define GENERATE_DOUBLE_KEY_EN					0		//产生复合键
	#define PRINT_TS_KEY_EN							0		//打印触摸按键值开关
#endif

/*******************************************************************************************************************************/

#define SUPPORT_ANTI_WATER_FUNCTION					1		
#if SUPPORT_ANTI_WATER_FUNCTION
	#define PANAL_COVER_JUDGE_TIME					2		//单位为15.625ms
	#define JUDGE_TK_NUM							3		
#endif

/*******************************************************************************************************************************/

//-------------------------------------------------------------------------------------------------------------------
/********触摸按键通道及触发门限值定义***********************************************************/
 	#define TOUTH_THD							150
	
	#define KEY_CH_COUNT						4	  		//触摸按键数量，必须正确填写
	#define KEY_SEQ       			\
	{TS_CH12 ,  TOUTH_THD},      	\
	{TS_CH13 ,  TOUTH_THD},      	\
	{TS_CH14 ,  TOUTH_THD},      	\
	{TS_CH15 ,  TOUTH_THD},      	\
//	{TS_CH16 ,  TOUTH_THD},      	\
//	{TS_CH17 ,  TOUTH_THD},      	\
//	{TS_CH20 ,  TOUTH_THD},      	\
//	{TS_CH21 ,  TOUTH_THD},      	\
//	{TS_CH22 ,  TOUTH_THD},      	\
//	{TS_CH23 ,  TOUTH_THD},      	\	
//	{TS_CH24 ,  TOUTH_THD},      	\	
//	{TS_CH25 ,  TOUTH_THD},      	\	

/*********************************************************************
说明：
1：	{TS_CHx, XX}
	   |			 |
		 |			 |	
		 |			 ------------->对应触摸通道的门限值，当触摸数据变化量大于此数值时，按键触发。
		 --------------------->触摸通道序号。
	
2：	以上触摸门限值可在触摸在线调试模式下由上位机软件(CACHIPTOOL.exe)导出。
*********************************************************************/
	
/***********NOISE门限值定义************************************************************************************/
#define NOISE_THRESHOLD  						(TOUTH_THD/3)	//此门限值可设置为触摸按键门限值的1/4 ~ 1/2
/*************************************************************************************************************/	


//-------------------------------------------------------------------------------------------------------------------
/***********触摸按键消抖及按键输出时间定义************************************************************************************/	
#define FINGER_TOUCH_CONFIRM_TIME					2 			//触摸按键按下确认时间，单位为15.625ms
#define FINGER_TOUCH_RELEASE_CONFIRM_TIME			2 			//触摸按键释放确认时间，单位为15.625ms
#define FINGER_LONG_TOUCH_TIME_LIMIT				30    		//限制按键输出时间，单位为0.5s，若定义为0，则关闭此功能	
//-------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------
/***********环境值更新速度设置********************************************************/
#define AREA_PNOISE_PLUS_CONFIRM_TIME				80 			//单位为15.625ms
#define AREA_PNOISE_CONFIRM_TIME					50 			//单位为15.625ms
#define AREA_NNOISE_CONFIRM_TIME					20 			//单位为15.625ms
#define AREA_OVERLOW_CONFIRM_TIME					20 			//单位为15.625ms

//说明：一般情况下，环境值更新速度设置用户不需要设置，保持默认值即可。
//-------------------------------------------------------------------------------------------------------------------
#else
#define KEY_CH_COUNT    						0
#endif

//-----------------触摸滑条或圆环应用设置-------------------------------------------------------------------------------------------------
#if SUPPORT_WHEEL_SLIDER
//-------------------------------------------------------------------------------------------------------------------
	#define PRINT_WHEEL_SLIDER_POSITION_EN				0		//打印触摸圆环或滑条位置开关
	#define PRINT_WHEEL_SLIDER_DATA_EN					0		//打印触摸圆环或滑条触摸数据开关
	#define PRINT_WHEEL_SLIDER_RATE_EN					0		//打印比率值

	
	#define WHEEL_SLIDER_BASELINE_UPDATE_TIME			50 		//单位为15.625ms
	
//-------------------------------------------------------------------------------------------------------------------
	
	#define WHEEL_SLIDER_TOUCH_CONFIRM_TIME				2 		//圆环或滑条按下确认时间，单位为15.625ms
	#define WHEEL_SLIDER_TOUCH_RELEASE_CONFIRM_TIME		2 		//圆环或滑条释放确认时间，单位为15.625ms	
	#define WHEEL_SLIDER_LONG_TOUCH_TIME_LIMIT			60    	//限制圆环和滑条触发时间，单位为0.5s，若定义为0，则关闭此功能			
//-------------------------------------------------------------------------------------------------------------------

	#define WHEEL_OR_SLIDER_DEF0						WHEEL	//是滑条还是转盘
	#define WHEEL_SLIDER0_CH_COUNT						4		//第一个转盘或滑条通道数目，必须正确填写	
	#define WHEEL_SLIDER0_SEQ							TS_CH10,TS_CH11,TS_CH12,TS_CH13
	#define WHEEL_SLIDER0_CH_MIN_RATE					32,			22,		26,		22	//手指触摸时当前通道数据变化量占变化量最大两通道变化量之和的最大比率，顺序与上述通道定义一一对应。


	#define WHEEL_SLIDER0_TOUCH_THD						0x20			
	#define WHEEL_SLIDER0_NOISE_THD						0x05
	
	#if !SUPPORT_KEY
	#define NOISE_THRESHOLD WHEEL_SLIDER0_NOISE_THD
	#endif
//-------------------------------------------------------------------------------------------------------------------
#else
		#define WHEEL_SLIDER0_CH_COUNT			0
#endif

//-------------------------------------------------------------------------------------------------------------------		
#define OPENED_TS_COUNT				(KEY_CH_COUNT+WHEEL_SLIDER0_CH_COUNT)

#if (!SUPPORT_KEY)		
	#undef TS_I2C_DEBUG		
	#define TS_I2C_DEBUG 								0
#endif
#if TS_I2C_DEBUG
	#ifdef UART2_EN
		#error	"请在配置文件中关闭宏定义UART2_EN!"
	#endif	
	#undef SUPPORT_TOUCH_SLEEP_MODE				//省电模式不支持触摸在线调试，所以要关闭省电模式
	#define SUPPORT_TOUCH_SLEEP_MODE			0
#endif

	#define TK_Debug_UartPutChar			Uart2_PutChar
	
#ifndef SLEEP_MODE_DEBUG
	#define SLEEP_MODE_DEBUG 					0
#endif
#ifndef PRINT_TS_KEY_EN
	#define PRINT_TS_KEY_EN 					0
#endif
#ifndef PRINT_WHEEL_SLIDER_POSITION_EN
	#define PRINT_WHEEL_SLIDER_POSITION_EN 		0
	#define PRINT_WHEEL_SLIDER_DATA_EN 			0
	#define PRINT_WHEEL_SLIDER_RATE_EN 			0
#endif
#if (SLEEP_MODE_DEBUG||PRINT_TS_KEY_EN||PRINT_WHEEL_SLIDER_POSITION_EN||PRINT_WHEEL_SLIDER_DATA_EN||PRINT_WHEEL_SLIDER_RATE_EN)
#define PRINT_EN					//使用uart_printf函数打印使能
	#ifdef PRINT_EN
		#if (!TS_I2C_DEBUG)
		#define UART2_EN			//如果使用UART，打开此宏定义
		#define UART2_BAUTRATE  			 115200
		#endif
	#endif
#endif

#endif
//-------------------------------------------------------------------------------------------------------------------
